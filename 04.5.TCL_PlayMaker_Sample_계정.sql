/*
    - tcl : transaction control language
      트랜잭션 제어 언어
      
      + 트랜잭션이란?
        - 데이터베이스의 논리적 연산단위를 말한다
        - 데이터의 변경사항(DML)들을 하나의 트랜잭션으로 통합하여 처리한다
          DML문 한개를 수행할 때, 트랜잭션이 존재한다면 해당 트랜잭션에 같이 묶어서 처리한다
                              트랜잭션이 없을 시 트랜잭션을 만들어 묶어서 처리한다
          Commit하기 전까지의 변경사항을 하나의 트랜잭션에 담는다
        - 트랜잭션 대상이 되는 sql : insert, update, delete
        
    > commit : 트랜잭션 종료 처리 후 확정
               한 트랜잭션에 담겨있는 변경사항들을 실제 DB에 반영시킨다는 뜻
    > rollback : 트랜잭션 취소
                 한 트랜잭션에 담겨있는 변경사항들을 삭제(취소)한 뒤, 마지막 commit 시점으로 되돌아간다
    > savepoint : 임시저장
                  현재 시점에 해당 포인트명으로 임시 저장점을 정의한다 
                  rollback 진행 시 전체 변경사항들을 모두 삭제가 아닌 
*/

-- 사번이 225인 사원 지우기
delete from emp_01
where emp_id = '225';

-- 사번이 224인 사원 지우기
delete from emp_01
where emp_id = '224';

rollback; -- 트랜잭션에 들어있던 224번, 225번의 삭제가 취소됐다 (= 트랜잭션이 사라졌다)

--------------------------------------------------------------------------------
-- 사번이 225번인 사원 지우기
delete from emp_01
where emp_id = 225;

select * from emp_01 order by emp_id;

insert into emp_01 values (225,'이연홍','인사관리부');

commit;

rollback;

--------------------------------------------------------------------------------
-- 223, 224, 225번의 사원을 지워라
delete from emp_01
where emp_id in (223,224,225);

-- 임시저장점 만들기
savepoint x;

select * from emp_01 order by emp_id;

insert into emp_01 values (223,'차병수','해외영업2부');

rollback to x;

commit;

--------------------------------------------------------------------------------
/*
    - 자동 커밋이 되는 경우
      1) 정상 종료
      2) DCL, DDL 명령문이 수행됐을 경우
      
    - 자동 롤백이 되는 경우
      1) 비정상 종료
      2) 전원이 꺼지는 경우. 즉 정전이나 컴퓨터 시스템이 완전히 나간 경우를 말한다
*/

-- 사번이 222, 223번인 사원 삭제
delete from emp_01
where emp_id in (222,223);

-- 사번이 221번인 사원 삭제
delete from emp_01 where emp_id=221;

-- DDL문
create table test2 (
    TID number
); -- 트랜잭션의 모든 내용은 자동 commit된다

rollback; -- 소용없다

--------------------------------------------------------------------------------
